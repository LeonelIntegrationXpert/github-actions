<?xml version="1.0" encoding="UTF-8"?>
<!--
==========================================================================
 MuleSoft Application XML (pom.xml)
==========================================================================
 Projeto: github-actions
 Autor: Leonel Dorneles Porto
 Email: leoneldornelesporto@outlook.com.br
 Telefone: +55 53 99180-4869
==========================================================================
 Descrição:
  - Configuração do projeto MuleSoft com implantação automatizada no CloudHub.
  - Inclui configuração do plugin Mule Maven, testes com MUnit e cobertura de código.
  - Padrão de nomes e tags para Visualizer.
==========================================================================
 Documentação oficial MuleSoft:
 https://docs.mulesoft.com/mule-runtime/4.4/
==========================================================================
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    
    <modelVersion>4.0.0</modelVersion>

    <!--
       Identificação do projeto (GroupId, ArtifactId, Version etc.)
       Ajuste conforme sua organização ou repositório.
    -->
    <groupId>37a4147b-4673-4cb6-b589-358074a13f8c</groupId>
    <artifactId>github-actions</artifactId>
    <version>1.0.20</version>
    <packaging>mule-application</packaging>
    <name>github-actions</name>

    <!-- ========================================================= -->
    <!-- =                 PROPRIEDADES (PROPERTIES)             = -->
    <!-- ========================================================= -->
    <properties>
        <!-- ================================================== -->
        <!-- = 1. BUILD / ENCODING                            = -->
        <!-- ================================================== -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>8</java.version>

	    <!-- ================================================== -->
	    <!-- = 2. MULE RUNTIME / CHANNEL                      = -->
	    <!-- ================================================== -->
	
	    <!-- 
	        releaseChannel: define o canal de liberação do runtime Mule.
	        
	        Existem dois principais tipos de releaseChannel disponíveis:
	        
	        1. LTS  (Long Term Support)
	           - Indicado para ambientes de Produção, com suporte estendido.
	           - Estável, com menor frequência de atualizações.
	           - Recomendado para APIs críticas, que exigem robustez e manutenção de longo prazo.
	           - Exemplos de versões LTS:
	               - 4.4.x
	               - 4.6.x
	               - 4.8.x
	               - 4.10.x
	           
	        2. Early Access (EA)
	           - Versões recentes, com novos recursos, mas de menor estabilidade.
	           - Recomendado apenas para ambientes de Desenvolvimento ou Prototipação.
	           - Uso NÃO recomendado para ambientes de Produção.
	           - Exemplos de versões EA:
	               - 4.5.x
	               - 4.7.x
	               - 4.9.x
	               - 4.11.x
	        
	        ATENÇÃO:
	        - Sempre alinhar a versão do runtime com o releaseChannel correspondente.
	        - Se usar LTS, escolha uma versão LTS. Exemplo:
	            <app.runtime>4.6.14</app.runtime>
	            <releaseChannel>LTS</releaseChannel>
	        - Se usar EA, escolha uma versão EA. Exemplo:
	            <app.runtime>4.9.0</app.runtime>
	            <releaseChannel>EA</releaseChannel>
	        
	        Referência Oficial MuleSoft:
	        https://help.mulesoft.com/s/article/MuleSoft-Support-Lifecycle
	
	    -->
        <app.runtime>4.6.14</app.runtime>
        <releaseChannel>LTS</releaseChannel>

        <!-- ================================================== -->
        <!-- = 3. VERSÕES DE PLUGINS (MULE / MUNIT / CLEAN)    = -->
        <!-- ================================================== -->
        <mule.maven.plugin.version>4.1.1</mule.maven.plugin.version>
        <munit.version>3.2.1</munit.version>
        <assertions.version>1.0.2</assertions.version>
        <maven-clean-plugin.version>3.0.0</maven-clean-plugin.version>

        <!-- ================================================== -->
        <!-- = 4. VERSÕES DE CONNECTORS (HTTP / SOCKETS)       = -->
        <!-- ================================================== -->
        <http.connector.version>1.10.3</http.connector.version>
        <sockets.connector.version>1.2.5</sockets.connector.version>

        <!-- ================================================== -->
        <!-- = 5. ENV / CLOUDHUB CONFIG                       = -->
        <!-- ================================================== -->
        <env>Sandbox</env>
        <region>Cloudhub-US-East-2</region>
        <cloudhub.vcores>0.1</cloudhub.vcores>
        <cloudhub.replicas>1</cloudhub.replicas>
        <provider>MC</provider>
        <generateDefaultPublicUrl>true</generateDefaultPublicUrl>

        <!-- ================================================== -->
        <!-- = 6. PROPRIEDADES DE API                          = -->
        <!-- ================================================== -->
        <api.id>SEU_API_ID</api.id>
        <api.version>1.0</api.version>

        <!-- ================================================== -->
        <!-- = 7. PROPRIEDADES DE COBERTURA MUNIT             = -->
        <!-- ================================================== -->
        <coverage.runCoverage>true</coverage.runCoverage>
        <coverage.failBuild>true</coverage.failBuild>
        <coverage.requiredCoverage>90</coverage.requiredCoverage>
        <coverage.format.console>console</coverage.format.console>
        <coverage.format.sonar>sonar</coverage.format.sonar>
        <coverage.format.json>json</coverage.format.json>
        <coverage.format.html>html</coverage.format.html>

        <!-- ================================================== -->
        <!-- = 8. PADRÃO DE NOME PARA A APLICAÇÃO NO CLOUDHUB  = -->
        <!-- ================================================== -->
        <!-- Exemplo de 'layer' (api, process, system, etc.) -->
        <app.layer>api</app.layer>
        <!-- Concatena: layer-artifactId-version-env -->
        <app.namingPattern>${app.layer}-${project.artifactId}-${project.version}-${env}</app.namingPattern>

        <!-- ================================================== -->
        <!-- = 9. VISUALIZER TAGS                             = -->
        <!-- ================================================== -->
        <!-- 
          Tags que serão exibidas no Visualizer. 
          Podem ser múltiplos valores separados por vírgula: 
          ex.: "financeiro, v1, leonel-team"
        -->
        <visualizer.tags>demonstracao, leonel, api-layer</visualizer.tags>

        <!-- ================================================== -->
        <!-- = 10. URLS / REPOSITÓRIOS                        = -->
        <!-- ================================================== -->
        <serverId>Repository</serverId>
        <anypoint.platform.url>https://anypoint.mulesoft.com</anypoint.platform.url>
        <!-- Propriedade base para qualquer URL do Anypoint -->
        <base.maven.anypoint.url>https://maven.anypoint.mulesoft.com/api/v3</base.maven.anypoint.url>
        <!-- URLs derivadas da base -->
        <anypoint.exchange.v3.url>${base.maven.anypoint.url}/maven</anypoint.exchange.v3.url>
        <private.exchange.url>${base.maven.anypoint.url}/organizations/${project.groupId}/maven</private.exchange.url>

        <!-- ================================================== -->
        <!-- = 11. CHAVE / OUTROS VALORES                      = -->
        <!-- ================================================== -->
        <key>Chave descript aqui...</key>

        <!-- ================================================== -->
        <!-- = 12. LAYOUTS DE REPOSITÓRIO                      = -->
        <!-- ================================================== -->
        <mulesoft-releases.layout>default</mulesoft-releases.layout>
        <anypoint-exchange-v3.layout>default</anypoint-exchange-v3.layout>
        <private-exchange-repository.layout>default</private-exchange-repository.layout>
        <corporate-repository.layout>default</corporate-repository.layout>
    </properties>

    <!-- ========================================================= -->
    <!-- =                        BUILD                          = -->
    <!-- = (Plugins de limpeza, deploy no CloudHub, MUnit etc.)   = -->
    <!-- ========================================================= -->
    <build>
        <finalName>${app.namingPattern}</finalName>
    
        <plugins>
            <!--
                Plugin de limpeza do projeto: faz limpeza das pastas target.
                https://maven.apache.org/plugins/maven-clean-plugin
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${maven-clean-plugin.version}</version>
            </plugin>

            <!--
                Mule Maven Plugin: responsável por build e deploy no CloudHub.
                https://docs.mulesoft.com/mule-runtime/latest/mule-maven-plugin
            -->
            <plugin>
                <groupId>org.mule.tools.maven</groupId>
                <artifactId>mule-maven-plugin</artifactId>
                <version>${mule.maven.plugin.version}</version>
                <extensions>true</extensions>
                <configuration>
                    <classifier>mule-application</classifier>
                    <cloudhub2Deployment>
                        <!-- URL e credenciais/servidor -->
                        <uri>${anypoint.platform.url}</uri>
                        <provider>${provider}</provider>
                        <environment>${env}</environment>
                        <target>${region}</target>
                        <server>${serverId}</server>
                        
                        <!-- Aqui usamos o padrão 'layer-nomedoprojeto-versão-env' -->
                        <applicationName>${app.namingPattern}</applicationName>

                        <!-- Versão do Mule e release channel -->
                        <muleVersion>${app.runtime}</muleVersion>
                        <releaseChannel>${releaseChannel}</releaseChannel>

                        <!-- Configurações de escala -->
                        <replicas>${cloudhub.replicas}</replicas>
                        <vCores>${cloudhub.vcores}</vCores>
                        <javaVersion>${java.version}</javaVersion>

                        <!-- Configurações adicionais de deployment -->
                        <deploymentSettings>
                            <generateDefaultPublicUrl>${generateDefaultPublicUrl}</generateDefaultPublicUrl>
                        </deploymentSettings>

                        <!-- Propriedades seguras (exemplo) -->
                        <secureProperties>
                            <key>${key}</key>
                        </secureProperties>

                        <!-- 
                            Propriedades expostas na aplicação (CloudHub).
                            Incluímos a do Visualizer 'anypoint.platform.visualizer.tags'
                            para que o Anypoint Visualizer leia automaticamente.
                        -->
                        <properties>
                            <env>${env}</env>
                            <api.id>${api.id}</api.id>
                            <api.version>${api.version}</api.version>

                            <!-- Propriedade especial para Visualizer: -->
                            <anypoint.platform.visualizer.tags>${visualizer.tags}</anypoint.platform.visualizer.tags>
                        </properties>
                    </cloudhub2Deployment>
                </configuration>
            </plugin>

            <!--
                MUnit Maven Plugin: executa testes e gera relatório de cobertura.
                https://docs.mulesoft.com/munit/3.2/munit-maven-plugin
            -->
            <plugin>
                <groupId>com.mulesoft.munit.tools</groupId>
                <artifactId>munit-maven-plugin</artifactId>
                <version>${munit.version}</version>
                <executions>
                    <execution>
                        <id>test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                            <goal>coverage-report</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <coverage>
                        <runCoverage>${coverage.runCoverage}</runCoverage>
                        <failBuild>${coverage.failBuild}</failBuild>
                        <requiredApplicationCoverage>${coverage.requiredCoverage}</requiredApplicationCoverage>
                        <formats>
                            <format>${coverage.format.console}</format>
                            <format>${coverage.format.sonar}</format>
                            <format>${coverage.format.json}</format>
                            <format>${coverage.format.html}</format>
                        </formats>
                    </coverage>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- ========================================================= -->
    <!-- =                   DEPENDÊNCIAS                        = -->
    <!-- =      (Mule, MUnit, HTTP Connector, Sockets etc.)     = -->
    <!-- ========================================================= -->
    <dependencies>
        <!-- Assertions para DataWeave (usadas em testes MUnit) -->
        <dependency>
            <groupId>org.mule.weave</groupId>
            <artifactId>assertions</artifactId>
            <version>${assertions.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Ferramentas do MUnit (mule-plugin) -->
        <dependency>
            <groupId>com.mulesoft.munit</groupId>
            <artifactId>munit-tools</artifactId>
            <version>${munit.version}</version>
            <classifier>mule-plugin</classifier>
            <scope>test</scope>
        </dependency>

        <!-- Conector HTTP para Mule 4 -->
        <dependency>
            <groupId>org.mule.connectors</groupId>
            <artifactId>mule-http-connector</artifactId>
            <version>${http.connector.version}</version>
            <classifier>mule-plugin</classifier>
        </dependency>

        <!-- Runner do MUnit (mule-plugin) -->
        <dependency>
            <groupId>com.mulesoft.munit</groupId>
            <artifactId>munit-runner</artifactId>
            <version>${munit.version}</version>
            <classifier>mule-plugin</classifier>
            <scope>test</scope>
        </dependency>

        <!-- Conector de Sockets -->
        <dependency>
            <groupId>org.mule.connectors</groupId>
            <artifactId>mule-sockets-connector</artifactId>
            <version>${sockets.connector.version}</version>
            <classifier>mule-plugin</classifier>
        </dependency>
    </dependencies>

    <!-- ========================================================= -->
    <!-- =               PLUGIN REPOSITORIES                     = -->
    <!-- = (Onde o Maven busca plugins específicos, ex: Mule)    = -->
    <!-- ========================================================= -->
    <pluginRepositories>
        <pluginRepository>
            <id>mulesoft-releases</id>
            <name>MuleSoft Releases Repository</name>
            <layout>${mulesoft-releases.layout}</layout>
            <url>https://repository.mulesoft.org/releases/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <!-- ========================================================= -->
    <!-- =                   REPOSITORIES                        = -->
    <!-- = (Onde o Maven busca dependências)                    = -->
    <!-- ========================================================= -->
    <repositories>
        <!-- Repositório padrão do Anypoint Exchange -->
        <repository>
            <id>anypoint-exchange-v3</id>
            <name>Anypoint Exchange</name>
            <url>${anypoint.exchange.v3.url}</url>
            <layout>${anypoint-exchange-v3.layout}</layout>
        </repository>
        <!-- Repositório de releases da MuleSoft -->
        <repository>
            <id>mulesoft-releases</id>
            <name>MuleSoft Releases Repository</name>
            <url>https://repository.mulesoft.org/releases/</url>
            <layout>${mulesoft-releases.layout}</layout>
        </repository>
        <!-- Repositório privado / personalizado -->
        <repository>
            <id>${serverId}</id>
            <name>Private Exchange repository</name>
            <url>${private.exchange.url}</url>
            <layout>${private-exchange-repository.layout}</layout>
        </repository>
    </repositories>

    <!-- ========================================================= -->
    <!-- =            DISTRIBUTION MANAGEMENT                    = -->
    <!-- = (Onde o projeto é publicado/deploy se necessário)    = -->
    <!-- ========================================================= -->
    <distributionManagement>
        <repository>
            <id>${serverId}</id>
            <name>Corporate Repository</name>
            <url>${private.exchange.url}</url>
            <layout>${corporate-repository.layout}</layout>
        </repository>
    </distributionManagement>

</project>
