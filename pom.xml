<?xml version="1.0" encoding="UTF-8"?>
<!--
===============================================================================
  üåü MuleSoft Application POM (Child Project)
===============================================================================
  üéØ Objetivo:
    ‚Ä¢ Demonstrar como herdar configura√ß√µes do **Parent POM** (common-pom-parent).  
    ‚Ä¢ Centralizar as vers√µes de depend√™ncias via BOM (common-bom).  
    ‚Ä¢ Configurar build, testes (MUnit) e deploy no CloudHub 2.0 de forma simplificada.
===============================================================================
  ‚úç Autor     : Leonel Dorneles Porto  
  üìß Email     : leoneldornelesporto@outlook.com.br  
  ‚òé Telefone  : +55 53 99180-4869
===============================================================================
  üìö Descri√ß√£o:
    - Este POM representa um **projeto Mule** (mule-application).
    - Herda do `common-pom-parent`, que por sua vez herda as vers√µes do `common-bom`.
    - Assim, s√≥ definimos o m√≠nimo (artifactId, version etc.) e deixamos 
      toda a l√≥gica de build/test/deploy no Parent.
===============================================================================
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
                             https://maven.apache.org/xsd/maven-4.0.0.xsd">

    <!-- (1) Vers√£o do Modelo do POM -->
    <modelVersion>4.0.0</modelVersion>

    <!-- 
    =============================================================================
     (2) Identifica√ß√£o do Projeto Mule
       - Ajuste o artifactId, version e groupId conforme sua organiza√ß√£o.
    =============================================================================
    -->
    <groupId>37a4147b-4673-4cb6-b589-358074a13f8c</groupId>
    <artifactId>github-actions</artifactId>
    <version>1.0.90</version>
    <packaging>mule-application</packaging>

    <name>github-actions</name>
    <description>Exemplo de projeto MuleSoft com build e deploy via GitHub Actions, herda configs do parent-pom.</description>

    <!-- 
    =============================================================================
     (3) Heran√ßa do Parent POM (common-pom-parent)
       - Este Parent j√° herda as vers√µes do BOM (common-bom).
       - Toda a configura√ß√£o de build, plugins e propriedades de 
         CloudHub/Visualizer est√° no Parent.
    =============================================================================
    -->
    <parent>
        <groupId>37a4147b-4673-4cb6-b589-358074a13f8c</groupId>
        <artifactId>common-pom-parent</artifactId>
        <version>1.0.0</version>
    </parent>

    <!-- 
    =============================================================================
     (4) BUILD
       - Geralmente deixamos apenas o essencial, 
         pois plugins e configura√ß√µes j√° v√™m do parent.
    =============================================================================
    -->
    <build>
        <!-- O finalName tamb√©m √© herdado, mas podemos sobrescrever se quiser. -->
        <finalName>${app.namingPattern}</finalName>

        <plugins>
            <!--
                üçÉ Mule Maven Plugin: respons√°vel por build e deploy no CloudHub.
                Herdamos a config do Parent, aqui podemos sobrescrever algo se precisar.
            -->
            <plugin>
                <groupId>org.mule.tools.maven</groupId>
                <artifactId>mule-maven-plugin</artifactId>
                <!--
                  N√£o definimos <version> nem <configuration> completo 
                  porque j√° est√° no parent. 
                  Se quisermos mudar algo espec√≠fico (ex.: vCores),
                  podemos adicionar <configuration> aqui.
                -->
                <extensions>true</extensions>
            </plugin>

            <!--
                üìä MUnit Maven Plugin: testes e cobertura.
                Herdamos a config do Parent, podendo sobrescrever se necess√°rio.
            -->
            <plugin>
                <groupId>com.mulesoft.munit.tools</groupId>
                <artifactId>munit-maven-plugin</artifactId>
            </plugin>

            <!--
                üîß Plugin de limpeza do projeto (maven-clean-plugin).
                Herdamos a vers√£o do Parent/BOM.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <!-- 
    =============================================================================
     (5) DEPEND√äNCIAS
       - Com a BOM importada via parent, n√£o precisamos 
         informar vers√µes. 
       - Basta definir groupId/artifactId/classifier.
    =============================================================================
    -->
    <dependencies>
        <!-- üß™ Assertions para DataWeave (testes MUnit) -->
        <dependency>
            <groupId>org.mule.weave</groupId>
            <artifactId>assertions</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- üß© Ferramentas do MUnit (mule-plugin) -->
        <dependency>
            <groupId>com.mulesoft.munit</groupId>
            <artifactId>munit-tools</artifactId>
            <classifier>mule-plugin</classifier>
            <scope>test</scope>
        </dependency>

        <!-- üåê Conector HTTP para Mule 4 -->
        <dependency>
            <groupId>org.mule.connectors</groupId>
            <artifactId>mule-http-connector</artifactId>
            <classifier>mule-plugin</classifier>
        </dependency>

        <!-- üèÉ Runner do MUnit (mule-plugin) -->
        <dependency>
            <groupId>com.mulesoft.munit</groupId>
            <artifactId>munit-runner</artifactId>
            <classifier>mule-plugin</classifier>
            <scope>test</scope>
        </dependency>

        <!-- üíª Conector de Sockets (opcional) -->
        <dependency>
            <groupId>org.mule.connectors</groupId>
            <artifactId>mule-sockets-connector</artifactId>
            <classifier>mule-plugin</classifier>
        </dependency>
    </dependencies>

    <!-- 
    =============================================================================
     (6) REPOSIT√ìRIOS e PLUGIN REPOSIT√ìRIOS
       - Geralmente herdados do Parent BOM/Parent POM, 
         mas podemos sobrescrever se quisermos algo espec√≠fico.
    =============================================================================
    -->
    <pluginRepositories>
        <pluginRepository>
            <id>mulesoft-releases</id>
            <name>MuleSoft Releases Repository</name>
            <url>https://repository.mulesoft.org/releases/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <repositories>
        <!-- Reposit√≥rio padr√£o do Anypoint Exchange v3 -->
        <repository>
            <id>anypoint-exchange-v3</id>
            <name>Anypoint Exchange</name>
            <url>${anypoint.exchange.v3.url}</url>
            <layout>${anypoint-exchange-v3.layout}</layout>
        </repository>

        <!-- Reposit√≥rio de releases da MuleSoft -->
        <repository>
            <id>mulesoft-releases</id>
            <name>MuleSoft Releases Repository</name>
			<url>${mulesoft.releases.repo.url}</url>
			<layout>${mulesoft-releases.layout}</layout>
        </repository>

        <!-- Reposit√≥rio privado / personalizado -->
        <repository>
            <id>${serverId}</id>
            <name>Private Exchange repository</name>
            <url>${private.exchange.url}</url>
            <layout>${private-exchange-repository.layout}</layout>
        </repository>
    </repositories>

</project>
