name: MuleSoft CI/CD

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Execute Tests (MUnit)
        env:
          KEY: ${{ secrets.decryption_key }}
        run: |
          mvn test --settings .maven/settings.xml -Dsecure.key="$KEY"

      - name: Upload MUnit Test Reports
        uses: actions/upload-artifact@v4
        with:
          name: munit-reports
          path: target/surefire-reports/

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build MuleSoft Artifact
        run: |
          mvn clean package -DskipMunitTests

      - name: Rename artifact with commit hash
        run: |
          artifactName=$(ls target/*.jar | head -1)
          commitHash=$(git rev-parse --short "$GITHUB_SHA")
          mv "$artifactName" "${artifactName%.jar}-$commitHash.jar"

      - name: Upload MuleSoft Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mule-artifact
          path: target/*.jar

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Download MuleSoft Artifact
        uses: actions/download-artifact@v4
        with:
          name: mule-artifact

      - name: Deploy to MuleSoft CloudHub
        env:
          USERNAME: ${{ secrets.anypoint_platform_username }}
          PASSWORD: ${{ secrets.anypoint_platform_password }}
          KEY: ${{ secrets.decryption_key }}
        run: |
          artifactName=$(ls *.jar | head -1)
          mvn deploy -DskipMunitTests -DmuleDeploy \
          -Dmule.artifact="$artifactName" \
          -Dsecure.key="$KEY" \
          --settings .maven/settings.xml \
          -Danypoint.username="$USERNAME" \
          -Danypoint.password="$PASSWORD"
